{"version":3,"sources":["components/GetDataJson.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["getDataJson","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","Todo","props","react_default","createElement","className","todo","completed","onClick","id","handle","title","concat","user","name","phone","email","company","TodoList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSort","field","sortCallback","sortList","rev","state","sortBy","toConsumableArray","sortedTodos","reverse","b","localeCompare","todos","sort","setState","titleResolver","toUpperCase","String","fromCharCode","handleTodoStatusChange","handleFunction","doneCount","count","i","length","usersCount","map","filter","item","index","array","_this2","components_Todo","key","React","Component","App","handleBtnClick","usersJson","todosJson","todoWithUsers","loadBtn","objectSpread","find","userId","users","todosWithUsers","prevState","components_TodoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8ff02356.chunk.js","sourcesContent":["const getDataJson = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getDataJson;\n","import React from 'react';\n\nconst Todo = (props) => {\n  const handleTodoStatusChange = (id) => {\n    props.handle(id);\n  };\n\n  return (\n    <tr>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}\n        onClick={() => handleTodoStatusChange(props.todo.id)}>\n\n        {props.todo.completed ? 'Done' : ''}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}>\n\n        {props.todo.title}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}\n        title={`\n          ${props.todo.user.name}\n          Phone: ${props.todo.user.phone}\n          E-Mail: ${props.todo.user.email}\n          Company: ${props.todo.user.company.name}`\n        }>\n\n        {props.todo.user.name}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}>\n\n        {props.todo.user.email}\n      </td>\n    </tr>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [...props.todos],\n      sortedTodos: [...props.todos],\n      sortBy: 'id',\n      reverse: false,\n    };\n  }\n\n  handleSort = (field) => {\n    let sortList = [];\n    let sortCallback;\n    let rev = false;\n\n    if (field === this.state.sortBy) {\n      sortList = [...this.state.sortedTodos].reverse();\n      rev = !this.state.reverse;\n    } else {\n      switch (field) {\n        case 'status':\n          sortCallback = (a, b) => a.completed - b.completed;\n          break;\n        case 'title':\n          sortCallback = (a, b) => a.title.localeCompare(b.title);\n          break;\n        case 'name':\n          sortCallback = (a, b) => a.user.name.localeCompare(b.user.name);\n          break;\n        case 'email':\n          sortCallback = (a, b) => a.user.email.localeCompare(b.user.email);\n          break;\n        default:\n          sortCallback = (a, b) => a.id - b.id;\n      }\n\n      sortList = [...this.state.todos].sort(sortCallback);\n    }\n\n    this.setState(() => (\n      {\n        sortedTodos: [...sortList],\n        sortBy: field,\n        reverse: rev,\n      }\n    ));\n  }\n\n  titleResolver = (field) => {\n    if (field === this.state.sortBy) {\n      return this.state.reverse\n        ? field.toUpperCase() + ' ' + String.fromCharCode(8657)\n        : field.toUpperCase() + ' ' + String.fromCharCode(8659);\n    }\n\n    return field.toUpperCase() + ' ' + String.fromCharCode(8661);\n  }\n\n  handleTodoStatusChange = (id) => {\n    this.props.handleFunction(id);\n  }\n\n  doneCount = () => {\n    let count = 0;\n    for (let i = 0; i < this.state.sortedTodos.length; i++) {\n      if (this.state.sortedTodos[i].completed) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  usersCount = () =>\n    this.state.sortedTodos.map(todo => todo.user.id)\n      .sort((a, b) => a - b)\n      .filter((item, index, array) => item !== array[index + 1]).length;\n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => this.handleSort('status')}>\n              {this.titleResolver('status')}\n            </th>\n            <th onClick={() => this.handleSort('title')}>\n              {this.titleResolver('title')}\n            </th>\n            <th onClick={() => this.handleSort('name')}>\n              {this.titleResolver('name')}\n            </th>\n            <th onClick={() => this.handleSort('email')}>\n              {this.titleResolver('email')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.sortedTodos.map(todo => <Todo\n            todo={todo}\n            key={todo.id}\n            handle={this.handleTodoStatusChange}\n          /> )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td className=\"tableFoot\">\n              Total\n            </td>\n            <td className=\"tableFoot\">\n              Done : {this.doneCount()}\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              UnDone : {this.state.sortedTodos.length - this.doneCount()}\n            </td>\n            <td className=\"tableFoot\">\n              Unique Users : {this.usersCount()}\n            </td>\n            <td className=\"tableFoot\">\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\n\nimport getDataJson from './components/GetDataJson';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loadBtn: '!!! Load !!!',\n      users: [],\n      todos: [],\n      todosWithUsers: [],\n    };\n  }\n\n  handleBtnClick = async() => {\n    this.setState(() => (\n      { loadBtn: 'Loading ...' }\n    ));\n\n    const usersJson = await getDataJson('https://jsonplaceholder.typicode.com/users');\n    const todosJson = await getDataJson('https://jsonplaceholder.typicode.com/todos');\n    const todoWithUsers = todosJson.map(todo => (\n      {\n        ...todo,\n        user: usersJson.find(user => user.id === todo.userId),\n      }\n    ));\n\n    this.setState(() => (\n      {\n        users: [...usersJson],\n        todos: [...todosJson],\n        todosWithUsers: [...todoWithUsers],\n        loadBtn: 'Done',\n      }\n    ));\n  }\n\n  handleTodoStatusChange = (id) => {\n    this.setState((prevState) => {\n      return {\n        todosWithUsers: prevState.todosWithUsers.map((todo) => {\n          todo.completed = todo.id === id\n            ? !todo.completed\n            : todo.completed;\n          return todo;\n        }),\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Dynamic list of&nbsp;\n          {this.state.todos[0]\n            ? this.state.todos.length\n            : null}\n          &nbsp;todos&nbsp;\n          {this.state.loadBtn === '!!! Load !!!'\n            ? null\n            : `- ${this.state.loadBtn}`}\n        </h1>\n\n        { this.state.loadBtn === 'Done'\n          ? <TodoList\n              todos={this.state.todosWithUsers}\n              handleFunction={this.handleTodoStatusChange}\n            />\n          : (\n              <button onClick={this.handleBtnClick}>\n                {this.state.loadBtn}\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}